name: 🚀 Django Package CI/CD

on:
  push:
    branches: [ branch ]      # Change to your branch
    tags:
      - 'v*'              # Publish only on version tags like 'v0.1.0'
  pull_request:
    branches: [ branch ]

env:
  PYTHON_VERSION: "3.12"

jobs:
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        django-version: [ '5.2' ]

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v3

      - name: ⚡ Install uv (fast package manager)
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: 🐍 Setup Python & venv
        run: |
          uv python install ${{ env.PYTHON_VERSION }}
          uv venv

      - name: 📦 Install Dependencies
        run: |
          uv pip install "Django~=${{ matrix.django-version }}.0"
          uv pip install -e ".[dev]"

      - name: 🧹 Run Linter (flake8)
        run: uv run flake8 .

      - name: ✅ Run Tests (pytest)
        run: uv run pytest --cov

  publish:
    name: 📦 Publish to PyPI
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v3

      - name: ⚡ Install uv (fast package manager)
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: 🐍 Setup Python & venv
        run: |
          uv python install ${{ env.PYTHON_VERSION }}
          uv venv

      - name: 📦 Install Build Tools
        run: uv install build twine

      - name: 🚀 Build & Publish to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          uv run python -m build
          uv run twine upload dist/*
